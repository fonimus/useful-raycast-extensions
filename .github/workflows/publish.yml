name: Publish

on:
  push:
    branches:
      - main

jobs:
  list-extensions:
    name: List extensions
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - id: set-matrix
        name: Set matrix
        run: |
          matrix=$(ls extensions/ | jq -R -s -c 'split("\n")[:-1]')
          echo "Setting matrix : $matrix"
          echo "matrix=$matrix" >> "$GITHUB_OUTPUT"

  publish:
    name: Publish extension ${{ matrix.extension }}
    runs-on: ubuntu-latest
    needs: list-extensions
    strategy:
      matrix:
        extension: ${{ fromJson(needs.list-extensions.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup node and yarn
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: Enable yarn
        run: corepack enable

      - name: Install dependencies
        run: yarn workspace ${{ matrix.extension }} install

      - name: Raycast login
        run: |
          configPath=~/.config/raycast/
          mkdir -p $configPath
          jq -n --arg accesstoken "${{ secrets.RAYCAST_TOKEN }}" '{"accesstoken": $accesstoken}' > $configPath/config.json

      - name: Build extension ${{ matrix.extension }}
        run: yarn workspace ${{ matrix.extension }} run build

      - name: Copy raycast package.json
        run: |
          raycastApiPackageJsonFile=node_modules/@raycast/api/package.json
          cp $raycastApiPackageJsonFile extensions/${{ matrix.extension }}/$raycastApiPackageJsonFile

      - name: Publish extension ${{ matrix.extension }}
        run: yarn workspace ${{ matrix.extension }} run publish
